name: Rust CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  build-and-test:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        rust-version: [stable]
        include:
          - os: macos-latest
            target-triple: x86_64-apple-darwin
          - os: ubuntu-latest
            target-triple: x86_64-unknown-linux-musl
          - os: windows-latest
            target-triple: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    env:
      NAME: oc-dt-monitor


    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust-version }}
        targets: ${{ matrix.target-triple }}

    - name: Install Dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install -y musl-tools

    - name: Build and Test
      run: cargo test --target ${{ matrix.target-triple }}

    - name: Package for Release
      run: cargo build --release --target ${{ matrix.target-triple }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.NAME }}-${{ matrix.target-triple }}${{ runner.os == 'Windows' && '.exe' || '' }}
        path: ./target/${{ matrix.target-triple }}/release/${{ env.NAME }}${{ runner.os == 'Windows' && '.exe' || '' }}

    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      with:
        asset_path: ./target/${{ matrix.target-triple }}/release/${{ env.NAME }}${{ runner.os == 'Windows' && '.exe' || '' }}
        asset_name: ${{ env.NAME }}-${{ matrix.target-triple }}${{ runner.os == 'Windows' && '.exe' || '' }}
        tag_name: ${{ github.ref }}
        overwrite: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
